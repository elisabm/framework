# -*- coding: utf-8 -*-
"""Entrega2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JjUVY5CKRPESfnPFCajufqCbMDQzB9yo
"""

#Librarías
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#url a un dataset en mi repositorio de github


url = 'https://raw.githubusercontent.com/elisabm/framework/main/heart_failure_clinical_records_dataset.csv'

data = pd.read_csv(url,index_col=0).drop_duplicates()

data.head()

#Descripción de los datos

data.describe()

#Checamos si existen valores nulos

data.isna().sum()

from sklearn.model_selection import train_test_split

X = data.drop(['DEATH_EVENT'],axis=1)
Y = data['DEATH_EVENT']

# Divido el dataset en training y test 
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3) # 70% training y 30% test

#Primera prueba

#Importamos Random Forest de sklearn
from sklearn.ensemble import RandomForestClassifier

#Creamos el modelo
clf=RandomForestClassifier(n_estimators=100, max_leaf_nodes=10, n_jobs=-1, random_state=50, warm_start=True)

#Entrenamos el modelo utilizando los training sets 
clf.fit(X_train,y_train)

y_pred=clf.predict(X_test)

#Importamos scikit-learn metrics para calcular la precisión del modelo
from sklearn import metrics
# Precisión del modelo
print("Precisión:",metrics.accuracy_score(y_test, y_pred))

#Segunda Prueba

#Importamos Random Forest de sklearn
from sklearn.ensemble import RandomForestClassifier

#Creamos el modelo
clf=RandomForestClassifier(n_estimators=100)

#Entrenamos el modelo utilizando los training sets 
clf.fit(X_train,y_train)

y_pred=clf.predict(X_test)

#Importamos scikit-learn metrics para calcular la precisión del modelo
from sklearn import metrics
# Precisión del modelo
print("Precisión:",metrics.accuracy_score(y_test, y_pred))

#Tercera Prueba

#Importamos Random Forest de sklearn
from sklearn.ensemble import RandomForestClassifier

#Creamos el modelo
clf=RandomForestClassifier(n_estimators=100, criterion='entropy', max_leaf_nodes=10, n_jobs=-1, random_state=50, warm_start=True)

#Entrenamos el modelo utilizando los training sets 
clf.fit(X_train,y_train)

y_pred=clf.predict(X_test)

#Importamos scikit-learn metrics para calcular la precisión del modelo
from sklearn import metrics
# Precisión del modelo
print("Precisión:",metrics.accuracy_score(y_test, y_pred))